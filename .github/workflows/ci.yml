name: CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version (e.g., 1.3.3 or 1.3.3-rc1)'
        required: true
      prerelease:
        description: 'Mark as prerelease (beta/rc)'
        required: false
        type: boolean
        default: false

jobs:
  test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run dev tests
        run: |
          python dev/test_updater_sha.py

  release_dispatch:
    if: github.event_name == 'workflow_dispatch'
    needs: test
    runs-on: windows-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Update version files to input version
        shell: pwsh
        run: |
          $version = '${{ inputs.version }}'
          echo "Target version: $version"
          python update_version.py $version
      - name: Create release branch, commit, and push
        shell: pwsh
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git fetch origin main --prune
          git checkout -B release/v${{ inputs.version }} origin/main
          git add setup.py setup.iss src/constants.py
          if (-not (git diff --cached --quiet)) { git commit -m "chore(release): v${{ inputs.version }}" }
          git push -u origin HEAD
      - name: Open Pull Request to main
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const head = `release/v${{ inputs.version }}`;
            const base = 'main';
            const title = `chore(release): v${{ inputs.version }}`;
            const body = `Automated release PR for v${{ inputs.version }}.\n- Bumps version via update_version.py\n- Merge this PR to proceed to tagging and release.`;
            try {
              const { data: pr } = await github.rest.pulls.create({ owner, repo, head, base, title, body });
              core.info(`PR created: ${pr.html_url}`);
            } catch (e) {
              if (e.status === 422) {
                core.info('PR already exists or no diff â€” skipping PR creation.');
              } else {
                throw e;
              }
            }

  release_on_tag:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.7'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements_build.txt
      - name: Install Inno Setup (via Chocolatey)
        shell: pwsh
        run: |
          choco install innosetup --no-progress -y
      - name: Build installer
        shell: cmd
        env:
          AppId: ${{ secrets.INNO_APP_ID }}
        run: |
          call build.bat
      - name: Ensure SHA256 exists
        shell: pwsh
        run: |
          if (-not (Test-Path 'heat_sheet_pdf_highlighter_installer.exe.sha256')) {
            if (Test-Path 'heat_sheet_pdf_highlighter_installer.exe') {
              $h = (Get-FileHash 'heat_sheet_pdf_highlighter_installer.exe' -Algorithm SHA256).Hash.ToLower()
              "$h  heat_sheet_pdf_highlighter_installer.exe" | Out-File -Encoding ascii -NoNewline 'heat_sheet_pdf_highlighter_installer.exe.sha256'
            }
          }
      - name: Create GitHub Release from tag
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') }}
          files: |
            heat_sheet_pdf_highlighter_installer.exe
            heat_sheet_pdf_highlighter_installer.exe.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

